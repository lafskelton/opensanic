// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: sanic.proto

package sanicdb

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//#####Streams
//
//Client-side streams
//get
type GETRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lexi *GETlexi `protobuf:"bytes,1,opt,name=lexi,proto3,oneof" json:"lexi,omitempty"`
	Nums *GETnums `protobuf:"bytes,2,opt,name=nums,proto3,oneof" json:"nums,omitempty"`
}

func (x *GETRequest) Reset() {
	*x = GETRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GETRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETRequest) ProtoMessage() {}

func (x *GETRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETRequest.ProtoReflect.Descriptor instead.
func (*GETRequest) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{0}
}

func (x *GETRequest) GetLexi() *GETlexi {
	if x != nil {
		return x.Lexi
	}
	return nil
}

func (x *GETRequest) GetNums() *GETnums {
	if x != nil {
		return x.Nums
	}
	return nil
}

type GETlexi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Index map[string]uint32 `protobuf:"bytes,1,rep,name=index,proto3" json:"index,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Docs  []string          `protobuf:"bytes,2,rep,name=docs,proto3" json:"docs,omitempty"`
	Keys  []string          `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GETlexi) Reset() {
	*x = GETlexi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GETlexi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETlexi) ProtoMessage() {}

func (x *GETlexi) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETlexi.ProtoReflect.Descriptor instead.
func (*GETlexi) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{1}
}

func (x *GETlexi) GetIndex() map[string]uint32 {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *GETlexi) GetDocs() []string {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *GETlexi) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type GETnums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index map[uint32]uint32 `protobuf:"bytes,1,rep,name=index,proto3" json:"index,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Docs  []string          `protobuf:"bytes,2,rep,name=docs,proto3" json:"docs,omitempty"`
	Keys  []uint32          `protobuf:"varint,3,rep,packed,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GETnums) Reset() {
	*x = GETnums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GETnums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETnums) ProtoMessage() {}

func (x *GETnums) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETnums.ProtoReflect.Descriptor instead.
func (*GETnums) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{2}
}

func (x *GETnums) GetIndex() map[uint32]uint32 {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *GETnums) GetDocs() []string {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *GETnums) GetKeys() []uint32 {
	if x != nil {
		return x.Keys
	}
	return nil
}

//Set
type SETRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Req:
	//	*SETRequest_Lexi
	//	*SETRequest_Nums
	Req isSETRequest_Req `protobuf_oneof:"req"`
}

func (x *SETRequest) Reset() {
	*x = SETRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SETRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SETRequest) ProtoMessage() {}

func (x *SETRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SETRequest.ProtoReflect.Descriptor instead.
func (*SETRequest) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{3}
}

func (m *SETRequest) GetReq() isSETRequest_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *SETRequest) GetLexi() *SETlexi {
	if x, ok := x.GetReq().(*SETRequest_Lexi); ok {
		return x.Lexi
	}
	return nil
}

func (x *SETRequest) GetNums() *SETnums {
	if x, ok := x.GetReq().(*SETRequest_Nums); ok {
		return x.Nums
	}
	return nil
}

type isSETRequest_Req interface {
	isSETRequest_Req()
}

type SETRequest_Lexi struct {
	Lexi *SETlexi `protobuf:"bytes,1,opt,name=lexi,proto3,oneof"`
}

type SETRequest_Nums struct {
	Nums *SETnums `protobuf:"bytes,2,opt,name=nums,proto3,oneof"`
}

func (*SETRequest_Lexi) isSETRequest_Req() {}

func (*SETRequest_Nums) isSETRequest_Req() {}

type SETlexi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  map[string]uint32 `protobuf:"bytes,1,rep,name=index,proto3" json:"index,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Docs   []string          `protobuf:"bytes,2,rep,name=docs,proto3" json:"docs,omitempty"`
	Keys   []string          `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	Values [][]byte          `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *SETlexi) Reset() {
	*x = SETlexi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SETlexi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SETlexi) ProtoMessage() {}

func (x *SETlexi) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SETlexi.ProtoReflect.Descriptor instead.
func (*SETlexi) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{4}
}

func (x *SETlexi) GetIndex() map[string]uint32 {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *SETlexi) GetDocs() []string {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *SETlexi) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *SETlexi) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type SETnums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  map[uint32]uint32 `protobuf:"bytes,1,rep,name=index,proto3" json:"index,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Docs   []string          `protobuf:"bytes,2,rep,name=docs,proto3" json:"docs,omitempty"`
	Keys   []uint32          `protobuf:"varint,3,rep,packed,name=keys,proto3" json:"keys,omitempty"`
	Values [][]byte          `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *SETnums) Reset() {
	*x = SETnums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SETnums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SETnums) ProtoMessage() {}

func (x *SETnums) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SETnums.ProtoReflect.Descriptor instead.
func (*SETnums) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{5}
}

func (x *SETnums) GetIndex() map[uint32]uint32 {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *SETnums) GetDocs() []string {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *SETnums) GetKeys() []uint32 {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *SETnums) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

//
//Server-side Stream
type GETReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docs   []string  `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
	Keys   [][]byte  `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Values [][]byte  `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	Err    *GetError `protobuf:"bytes,4,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *GETReply) Reset() {
	*x = GETReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GETReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GETReply) ProtoMessage() {}

func (x *GETReply) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GETReply.ProtoReflect.Descriptor instead.
func (*GETReply) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{6}
}

func (x *GETReply) GetDocs() []string {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *GETReply) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *GETReply) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *GETReply) GetErr() *GetError {
	if x != nil {
		return x.Err
	}
	return nil
}

type SETReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docs []string  `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
	Keys [][]byte  `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	Err  *SetError `protobuf:"bytes,3,opt,name=err,proto3,oneof" json:"err,omitempty"`
}

func (x *SETReply) Reset() {
	*x = SETReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SETReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SETReply) ProtoMessage() {}

func (x *SETReply) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SETReply.ProtoReflect.Descriptor instead.
func (*SETReply) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{7}
}

func (x *SETReply) GetDocs() []string {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *SETReply) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *SETReply) GetErr() *SetError {
	if x != nil {
		return x.Err
	}
	return nil
}

//###### CMD
//
//CMD
type CMD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Cmds []string `protobuf:"bytes,2,rep,name=cmds,proto3" json:"cmds,omitempty"`
}

func (x *CMD) Reset() {
	*x = CMD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMD) ProtoMessage() {}

func (x *CMD) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMD.ProtoReflect.Descriptor instead.
func (*CMD) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{8}
}

func (x *CMD) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CMD) GetCmds() []string {
	if x != nil {
		return x.Cmds
	}
	return nil
}

type CMDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Out []string `protobuf:"bytes,2,rep,name=out,proto3" json:"out,omitempty"`
}

func (x *CMDResp) Reset() {
	*x = CMDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMDResp) ProtoMessage() {}

func (x *CMDResp) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMDResp.ProtoReflect.Descriptor instead.
func (*CMDResp) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{9}
}

func (x *CMDResp) GetOut() []string {
	if x != nil {
		return x.Out
	}
	return nil
}

//###### Errors
//
//ERRORS
type SetError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err []string `protobuf:"bytes,1,rep,name=err,proto3" json:"err,omitempty"`
}

func (x *SetError) Reset() {
	*x = SetError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetError) ProtoMessage() {}

func (x *SetError) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetError.ProtoReflect.Descriptor instead.
func (*SetError) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{10}
}

func (x *SetError) GetErr() []string {
	if x != nil {
		return x.Err
	}
	return nil
}

type GetError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err []string `protobuf:"bytes,1,rep,name=err,proto3" json:"err,omitempty"`
}

func (x *GetError) Reset() {
	*x = GetError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sanic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetError) ProtoMessage() {}

func (x *GetError) ProtoReflect() protoreflect.Message {
	mi := &file_sanic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetError.ProtoReflect.Descriptor instead.
func (*GetError) Descriptor() ([]byte, []int) {
	return file_sanic_proto_rawDescGZIP(), []int{11}
}

func (x *GetError) GetErr() []string {
	if x != nil {
		return x.Err
	}
	return nil
}

var File_sanic_proto protoreflect.FileDescriptor

var file_sanic_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x22, 0x74, 0x0a, 0x0a, 0x47, 0x45, 0x54, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x65, 0x78, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x47, 0x45, 0x54,
	0x6c, 0x65, 0x78, 0x69, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x65, 0x78, 0x69, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x47, 0x45, 0x54, 0x6e, 0x75, 0x6d, 0x73, 0x48,
	0x01, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c,
	0x65, 0x78, 0x69, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x22, 0x9e, 0x01, 0x0a,
	0x07, 0x47, 0x45, 0x54, 0x6c, 0x65, 0x78, 0x69, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64,
	0x62, 0x2e, 0x47, 0x45, 0x54, 0x6c, 0x65, 0x78, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9e, 0x01,
	0x0a, 0x07, 0x47, 0x45, 0x54, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63,
	0x64, 0x62, 0x2e, 0x47, 0x45, 0x54, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x63, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63,
	0x0a, 0x0a, 0x53, 0x45, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04,
	0x6c, 0x65, 0x78, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x61, 0x6e,
	0x69, 0x63, 0x64, 0x62, 0x2e, 0x53, 0x45, 0x54, 0x6c, 0x65, 0x78, 0x69, 0x48, 0x00, 0x52, 0x04,
	0x6c, 0x65, 0x78, 0x69, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x53, 0x45, 0x54,
	0x6e, 0x75, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x42, 0x05, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x22, 0xb6, 0x01, 0x0a, 0x07, 0x53, 0x45, 0x54, 0x6c, 0x65, 0x78, 0x69, 0x12,
	0x31, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x53, 0x45, 0x54, 0x6c, 0x65, 0x78, 0x69,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb6, 0x01, 0x0a,
	0x07, 0x53, 0x45, 0x54, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64,
	0x62, 0x2e, 0x53, 0x45, 0x54, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x6f, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7c, 0x0a, 0x08, 0x47, 0x45, 0x54, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x6f, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x72, 0x72, 0x22, 0x64, 0x0a, 0x08, 0x53, 0x45, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x6f, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x2d, 0x0a, 0x03, 0x43, 0x4d, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6d, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6d, 0x64, 0x73, 0x22, 0x1b, 0x0a, 0x07, 0x43, 0x4d, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x6f, 0x75, 0x74, 0x22, 0x1c, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x1c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x32, 0x8e, 0x01, 0x0a, 0x07, 0x53, 0x61, 0x6e, 0x69, 0x63, 0x44, 0x42, 0x12, 0x2d, 0x0a,
	0x03, 0x47, 0x45, 0x54, 0x12, 0x13, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x47,
	0x45, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x61, 0x6e, 0x69,
	0x63, 0x64, 0x62, 0x2e, 0x47, 0x45, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x03,
	0x53, 0x45, 0x54, 0x12, 0x13, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x53, 0x45,
	0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63,
	0x64, 0x62, 0x2e, 0x53, 0x45, 0x54, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x0c, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x43, 0x4d, 0x44,
	0x1a, 0x10, 0x2e, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x2e, 0x43, 0x4d, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x61, 0x6e, 0x69, 0x63, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sanic_proto_rawDescOnce sync.Once
	file_sanic_proto_rawDescData = file_sanic_proto_rawDesc
)

func file_sanic_proto_rawDescGZIP() []byte {
	file_sanic_proto_rawDescOnce.Do(func() {
		file_sanic_proto_rawDescData = protoimpl.X.CompressGZIP(file_sanic_proto_rawDescData)
	})
	return file_sanic_proto_rawDescData
}

var file_sanic_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_sanic_proto_goTypes = []interface{}{
	(*GETRequest)(nil), // 0: sanicdb.GETRequest
	(*GETlexi)(nil),    // 1: sanicdb.GETlexi
	(*GETnums)(nil),    // 2: sanicdb.GETnums
	(*SETRequest)(nil), // 3: sanicdb.SETRequest
	(*SETlexi)(nil),    // 4: sanicdb.SETlexi
	(*SETnums)(nil),    // 5: sanicdb.SETnums
	(*GETReply)(nil),   // 6: sanicdb.GETReply
	(*SETReply)(nil),   // 7: sanicdb.SETReply
	(*CMD)(nil),        // 8: sanicdb.CMD
	(*CMDResp)(nil),    // 9: sanicdb.CMDResp
	(*SetError)(nil),   // 10: sanicdb.SetError
	(*GetError)(nil),   // 11: sanicdb.GetError
	nil,                // 12: sanicdb.GETlexi.IndexEntry
	nil,                // 13: sanicdb.GETnums.IndexEntry
	nil,                // 14: sanicdb.SETlexi.IndexEntry
	nil,                // 15: sanicdb.SETnums.IndexEntry
}
var file_sanic_proto_depIdxs = []int32{
	1,  // 0: sanicdb.GETRequest.lexi:type_name -> sanicdb.GETlexi
	2,  // 1: sanicdb.GETRequest.nums:type_name -> sanicdb.GETnums
	12, // 2: sanicdb.GETlexi.index:type_name -> sanicdb.GETlexi.IndexEntry
	13, // 3: sanicdb.GETnums.index:type_name -> sanicdb.GETnums.IndexEntry
	4,  // 4: sanicdb.SETRequest.lexi:type_name -> sanicdb.SETlexi
	5,  // 5: sanicdb.SETRequest.nums:type_name -> sanicdb.SETnums
	14, // 6: sanicdb.SETlexi.index:type_name -> sanicdb.SETlexi.IndexEntry
	15, // 7: sanicdb.SETnums.index:type_name -> sanicdb.SETnums.IndexEntry
	11, // 8: sanicdb.GETReply.err:type_name -> sanicdb.GetError
	10, // 9: sanicdb.SETReply.err:type_name -> sanicdb.SetError
	0,  // 10: sanicdb.SanicDB.GET:input_type -> sanicdb.GETRequest
	3,  // 11: sanicdb.SanicDB.SET:input_type -> sanicdb.SETRequest
	8,  // 12: sanicdb.SanicDB.cmd:input_type -> sanicdb.CMD
	6,  // 13: sanicdb.SanicDB.GET:output_type -> sanicdb.GETReply
	7,  // 14: sanicdb.SanicDB.SET:output_type -> sanicdb.SETReply
	9,  // 15: sanicdb.SanicDB.cmd:output_type -> sanicdb.CMDResp
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_sanic_proto_init() }
func file_sanic_proto_init() {
	if File_sanic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sanic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GETRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GETlexi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GETnums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SETRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SETlexi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SETnums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GETReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SETReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sanic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sanic_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_sanic_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SETRequest_Lexi)(nil),
		(*SETRequest_Nums)(nil),
	}
	file_sanic_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_sanic_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sanic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sanic_proto_goTypes,
		DependencyIndexes: file_sanic_proto_depIdxs,
		MessageInfos:      file_sanic_proto_msgTypes,
	}.Build()
	File_sanic_proto = out.File
	file_sanic_proto_rawDesc = nil
	file_sanic_proto_goTypes = nil
	file_sanic_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SanicDBClient is the client API for SanicDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SanicDBClient interface {
	GET(ctx context.Context, in *GETRequest, opts ...grpc.CallOption) (*GETReply, error)
	SET(ctx context.Context, in *SETRequest, opts ...grpc.CallOption) (*SETReply, error)
	Cmd(ctx context.Context, in *CMD, opts ...grpc.CallOption) (*CMDResp, error)
}

type sanicDBClient struct {
	cc grpc.ClientConnInterface
}

func NewSanicDBClient(cc grpc.ClientConnInterface) SanicDBClient {
	return &sanicDBClient{cc}
}

func (c *sanicDBClient) GET(ctx context.Context, in *GETRequest, opts ...grpc.CallOption) (*GETReply, error) {
	out := new(GETReply)
	err := c.cc.Invoke(ctx, "/sanicdb.SanicDB/GET", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sanicDBClient) SET(ctx context.Context, in *SETRequest, opts ...grpc.CallOption) (*SETReply, error) {
	out := new(SETReply)
	err := c.cc.Invoke(ctx, "/sanicdb.SanicDB/SET", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sanicDBClient) Cmd(ctx context.Context, in *CMD, opts ...grpc.CallOption) (*CMDResp, error) {
	out := new(CMDResp)
	err := c.cc.Invoke(ctx, "/sanicdb.SanicDB/cmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SanicDBServer is the server API for SanicDB service.
type SanicDBServer interface {
	GET(context.Context, *GETRequest) (*GETReply, error)
	SET(context.Context, *SETRequest) (*SETReply, error)
	Cmd(context.Context, *CMD) (*CMDResp, error)
}

// UnimplementedSanicDBServer can be embedded to have forward compatible implementations.
type UnimplementedSanicDBServer struct {
}

func (*UnimplementedSanicDBServer) GET(context.Context, *GETRequest) (*GETReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GET not implemented")
}
func (*UnimplementedSanicDBServer) SET(context.Context, *SETRequest) (*SETReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SET not implemented")
}
func (*UnimplementedSanicDBServer) Cmd(context.Context, *CMD) (*CMDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cmd not implemented")
}

func RegisterSanicDBServer(s *grpc.Server, srv SanicDBServer) {
	s.RegisterService(&_SanicDB_serviceDesc, srv)
}

func _SanicDB_GET_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GETRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SanicDBServer).GET(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sanicdb.SanicDB/GET",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SanicDBServer).GET(ctx, req.(*GETRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SanicDB_SET_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SETRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SanicDBServer).SET(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sanicdb.SanicDB/SET",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SanicDBServer).SET(ctx, req.(*SETRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SanicDB_Cmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CMD)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SanicDBServer).Cmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sanicdb.SanicDB/Cmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SanicDBServer).Cmd(ctx, req.(*CMD))
	}
	return interceptor(ctx, in, info, handler)
}

var _SanicDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sanicdb.SanicDB",
	HandlerType: (*SanicDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GET",
			Handler:    _SanicDB_GET_Handler,
		},
		{
			MethodName: "SET",
			Handler:    _SanicDB_SET_Handler,
		},
		{
			MethodName: "cmd",
			Handler:    _SanicDB_Cmd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sanic.proto",
}
